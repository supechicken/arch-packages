pkgname=nginx-custom
pkgver=1.26.2
pkgrel=1
arch=(x86_64)
pkgdesc='Lightweight HTTP server and IMAP/POP3 proxy server'
url='https://nginx.org'
license=(BSD-2-Clause)
depends=(glibc pcre2 zlib openssl geoip mailcap libxcrypt brotli libmaxminddb)
makedepends=(mercurial pcre2 zlib openssl geoip mailcap libxcrypt llvm clang mold)
checkdepends=(perl perl-gd perl-io-socket-ssl perl-fcgi perl-cache-memcached
              perl-cryptx memcached ffmpeg coreutils)
provides=(nginx)
conflicts=(nginx)

source=(
  https://nginx.org/download/nginx-1.26.2.tar.gz
  git+https://github.com/quictls/openssl#tag=openssl-3.1.7+quic
  git+https://github.com/tokers/zstd-nginx-module#commit=f4ba115e0b0eaecde545e5f37db6aa18917d8f4b
  git+https://github.com/google/ngx_brotli#commit=a71f9312c2deb28875acc7bacfdd5695a111aa53
  git+https://github.com/samizdatco/nginx-http-auth-digest#commit=5a2cae4812d8a1ba5f83dfbcb8d043d05c8e6f97
  git+https://github.com/leev/ngx_http_geoip2_module#commit=445df24ef3781e488cee3dfe8a1e111997fc1dfe
  git+https://github.com/openresty/headers-more-nginx-module#commit=f8f80997f19a41dc4181987544b9f3570cc3d6da
  nginx.service
  logrotate
)

sha256sums=(SKIP SKIP SKIP SKIP SKIP SKIP SKIP SKIP SKIP)

_common_flags=(
  --with-compat
  --with-debug
  --with-file-aio
  --with-http_addition_module
  --with-http_auth_request_module
  --with-http_dav_module
  --with-http_degradation_module
  --with-http_flv_module
  --with-http_geoip_module
  --with-http_gunzip_module
  --with-http_gzip_static_module
  --with-http_mp4_module
  --with-http_random_index_module
  --with-http_realip_module
  --with-http_secure_link_module
  --with-http_slice_module
  --with-http_ssl_module
  --with-http_stub_status_module
  --with-http_sub_module
  --with-http_v2_module
  --with-http_v3_module
  --with-mail
  --with-mail_ssl_module
  --with-pcre-jit
  --with-stream
  --with-stream_geoip_module
  --with-stream_realip_module
  --with-stream_ssl_module
  --with-stream_ssl_preread_module
  --with-threads
)

_nginx_cflags='-Wno-unused-command-line-argument -fuse-ld=lld -O3'

_nginx_env() {
  CC=clang CXX=clang++ CFLAGS="${_nginx_cflags}" CXXFLAGS="${_nginx_cflags}" "${@}"
}

prepare() {
  git -C ngx_brotli submodule update --init
}

build() {
  (
    cd openssl/
    _nginx_env ./config --prefix=$(pwd)/build no-shared
    _nginx_env make -j6
    _nginx_env make install_sw -j6
  )

  (
    cd nginx-1.*/
    _nginx_env ./configure \
      --prefix=/etc/nginx \
      --conf-path=/etc/nginx/nginx.conf \
      --sbin-path=/usr/bin/nginx \
      --pid-path=/run/nginx.pid \
      --lock-path=/run/lock/nginx.lock \
      --user=http \
      --group=http \
      --http-log-path=/var/log/nginx/access.log \
      --error-log-path=stderr \
      --http-client-body-temp-path=/var/lib/nginx/client-body \
      --http-proxy-temp-path=/var/lib/nginx/proxy \
      --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
      --http-scgi-temp-path=/var/lib/nginx/scgi \
      --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
      --add-module=../zstd-nginx-module \
      --add-module=../ngx_brotli \
      --add-module=../nginx-http-auth-digest \
      --add-module=../ngx_http_geoip2_module \
      --add-module=../headers-more-nginx-module \
      --with-cc-opt="-I../openssl/build/include ${_nginx_cflags}" \
      --with-ld-opt="-L../openssl/build/lib64" \
      "${_common_flags[@]}"

    _nginx_env make -j6
  )
}

package() {
  cd nginx-1.*/
  make DESTDIR="$pkgdir" install -j6

  sed -e 's|\<user\s\+\w\+;|user http;|g' \
    -e '44s|html|/usr/share/nginx/html|' \
    -e '54s|html|/usr/share/nginx/html|' \
    -i "$pkgdir"/etc/nginx/nginx.conf

  rm "$pkgdir"/etc/nginx/*.default
  rm "$pkgdir"/etc/nginx/mime.types  # in mailcap

  install -d "$pkgdir"/var/lib/nginx
  install -dm700 "$pkgdir"/var/lib/nginx/proxy

  chmod 755 "$pkgdir"/var/log/nginx
  chown root:root "$pkgdir"/var/log/nginx

  install -d "$pkgdir"/usr/share/nginx
  mv "$pkgdir"/etc/nginx/html/ "$pkgdir"/usr/share/nginx

  install -Dm644 ../logrotate "$pkgdir"/etc/logrotate.d/nginx
  install -Dm644 ../nginx.service "$pkgdir"/usr/lib/systemd/system/nginx.service
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE

  rmdir "$pkgdir"/run

  install -Dm0644 objs/nginx.8 "$pkgdir"/usr/share/man/man8/nginx.8

  for i in ftdetect ftplugin indent syntax; do
    install -Dm644 contrib/vim/$i/nginx.vim \
      "$pkgdir/usr/share/vim/vimfiles/$i/nginx.vim"
  done
}
