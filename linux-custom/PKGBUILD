pkgname=linux-custom
pkgver=6.12.13
pkgrel=1
arch=(x86_64)
license=(GPL-2.0-only)
provides=(linux-lts linux-lts-headers linux-api-headers)
conflicts=(linux-lts linux-lts-headers linux-api-headers)

makedepends=(
  llvm
  clang
  lld
  bc
  cpio
  gettext
  libelf
  pahole
  perl
  python
  tar
  xz
  zstd
  rsync
)

options=(!strip)

source=(
  https://github.com/intel/linux-intel-lts/archive/refs/tags/lts-v6.12.13-linux-250212T000422Z.tar.gz
  https://gitlab.archlinux.org/archlinux/packaging/packages/linux-lts/-/archive/6.12.13-1/linux-lts-6.12.13-1.tar.gz
  https://gitlab.com/xanmod/linux-patches/-/archive/master/linux-patches-master.tar.gz
  config  # the main kernel config file
)

sha256sums=(SKIP SKIP SKIP SKIP)

#_openwrt_patches=(
#  ../openwrt-*/target/linux/generic/backport-6.6/6*.patch
#  ../openwrt-*/target/linux/generic/backport-6.6/700-v6.10-net-create-a-dummy-net_device-allocator.patch
#  ../openwrt-*/target/linux/generic/hack-6.6/645-netfilter-connmark-introduce-set-dscpmark.patch
#  ../openwrt-*/target/linux/generic/hack-6.6/650-netfilter-add-xt_FLOWOFFLOAD-target.patch
#  ../openwrt-*/target/linux/generic/hack-6.6/660-fq_codel_defaults.patch
#  ../openwrt-*/target/linux/generic/hack-6.6/661-kernel-ct-size-the-hashtable-more-adequately.patch
#  ../openwrt-*/target/linux/generic/hack-6.6/721-net-add-packet-mangeling.patch
#  ../openwrt-*/target/linux/generic/hack-6.6/790-SFP-GE-T-ignore-TX_FAULT.patch
#  ../openwrt-*/target/linux/generic/pending-6.6/150-bridge_allow_receiption_on_disabled_port.patch
#  ../openwrt-*/target/linux/generic/pending-6.6/151-net-bridge-do-not-send-arp-replies-if-src-and-target.patch
#  ../openwrt-*/target/linux/generic/pending-6.6/6*.patch
#  ../openwrt-*/target/linux/generic/pending-6.6/7*-{netfilter,bridge}*.patch
#)

_patches=(
  ../linux-lts-*/*.patch # arch patches
  ../linux-patches-*/linux-6.6.y-xanmod/net/tcp/{bbr3,cloudflare}/*.patch # network patches
)

export SRCNAME=linux-intel-lts-lts-*/
export KBUILD_BUILD_HOST=Jumper-MiniPC
export KBUILD_BUILD_USER=supechicken

prepare() {
  cd $SRCNAME

  shopt -s nullglob
  for p in ${_patches[@]}; do
    echo -e "\e[1;33mApplying patch $p...\e[0m"
    patch -Np1 < $p
  done
  shopt -u nullglob

  echo "Setting config..."
  scripts/kconfig/merge_config.sh -m ../linux-lts-6.*/config .config
  
  make ARCH=x86_64 LLVM=1 LLVM_IAS=1 olddefconfig
  diff -Nur --color ../linux-lts-6.*/config .config || true

  make -s kernelrelease > version
  echo "Prepared $pkgbase version $(<version)"
}

build() {
  cd $SRCNAME

  make ARCH=x86_64 LLVM=1 LLVM_IAS=1 bzImage -j$(nproc)
  make ARCH=x86_64 LLVM=1 LLVM_IAS=1 modules -j$(nproc)
}

package() {
  mkdir -p $pkgdir/{boot,usr}
  cd $SRCNAME

  local modulesdir="$pkgdir/usr/lib/modules/$(<version)"

  make ARCH=x86_64 LLVM=1 LLVM_IAS=1 INSTALL_HDR_PATH=$pkgdir/usr headers_install -j$(nproc)

  ZSTD_CLEVEL=19 make \
    ARCH=x86_64 LLVM=1 LLVM_IAS=1 \
    DEPMOD=/doesnt/exist \
    INSTALL_MOD_PATH="$pkgdir/usr" \
    INSTALL_MOD_STRIP=1 \
    modules_install -j$(nproc)

  echo "Removing documentation..."
  rm -r Documentation

  echo "Removing loose objects..."
  find . -type f -name '*.o' -printf 'Removing %P\n' -delete

  # Used by mkinitcpio to name the kernel
  echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

  mkdir -p $pkgdir/usr/src
  cp -r . $pkgdir/usr/src/$pkgbase

  ln -sf /usr/src/$pkgbase $modulesdir/build
  install -Dm644 arch/x86/boot/bzImage $pkgdir/boot/vmlinuz-custom
}
